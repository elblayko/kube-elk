apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: elastic
  labels:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/part-of: elk
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kibana
      app.kubernetes.io/part-of: elk
      app.kubernetes.io/version: 8.2.3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kibana
        app.kubernetes.io/part-of: elk
        app.kubernetes.io/version: 8.2.3
    spec:
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:8.2.3
          ports:
            - name: http
              containerPort: 5601
          volumeMounts:
            - name: kibana-config
              mountPath: /usr/share/kibana/config/kibana.yml
              subPath: kibana.yml
          # startupProbe:
          #   periodSeconds: 10
          #   failureThreshold: 30
          #   httpGet:
          #     path: /status
          #     port: 80
      volumes:
        - name: kibana-config
          configMap:
            name: kibana
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: elastic
  labels:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/part-of: elk
spec:
  selector:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/part-of: elk
    app.kubernetes.io/version: 8.2.3
  ports:
    - name: http
      port: 5601
      targetPort: 5601
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana
  namespace: elastic
  labels:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/part-of: elk
data:
  kibana.yml: |
    server.name: kibana
    server.host: 0.0.0.0
    server.publicBaseUrl: http://kibana.elastic.local
    elasticsearch.hosts: [ "http://elasticsearch:9200" ]
    monitoring.ui.container.elasticsearch.enabled: true
    map.emsUrl: http://maps.elastic.local
